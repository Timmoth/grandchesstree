name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version'
        default: '0.0.3'
        required: false
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      - name: Get .NET application version
        id: get_version
        run: |
          VERSION=${{ github.event.inputs.version }}
          FORMATTED_VERSION=$(echo $VERSION | tr '.' '_')
          echo "Application version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "formatted_version=$FORMATTED_VERSION" >> $GITHUB_ENV

      - name: Build and Package Applications
        run: |
          VERSION=${{ env.version }}
          FORMATTED_VERSION=${{ env.formatted_version }}
          OUTPUT_DIR=${{ github.workspace }}/output
          mkdir -p $OUTPUT_DIR
          for APP in GrandChessTree.Client GrandChessTree.Engine; do
            for PLATFORM in win-x64 linux-x64 linux-arm64 osx-x64 osx-arm64; do
              OUTPUT_NAME=$(echo $APP | sed 's/GrandChessTree\.Client/tgct_client/;s/GrandChessTree\.Engine/tgct_engine/')
              PLATFORM_OUTPUT_PATH=$OUTPUT_DIR/${PLATFORM}
              mkdir -p $PLATFORM_OUTPUT_PATH
              if [[ "$PLATFORM" == "linux-arm64" || "$PLATFORM" == "osx-arm64" ]]; then
                dotnet publish $APP -r $PLATFORM /p:Release=true -p:DefineConstants="ARM" -o $PLATFORM_OUTPUT_PATH
              else
                dotnet publish $APP -r $PLATFORM /p:Release=true -o $PLATFORM_OUTPUT_PATH
              fi

              if [[ "$PLATFORM" == "win-x64" ]]; then
                mv $PLATFORM_OUTPUT_PATH/$(basename $APP).exe $OUTPUT_DIR/${OUTPUT_NAME}_${FORMATTED_VERSION}_${PLATFORM}.exe
              else
                mv $PLATFORM_OUTPUT_PATH/$(basename $APP) $OUTPUT_DIR/${OUTPUT_NAME}_${FORMATTED_VERSION}_${PLATFORM}
              fi
            done
          done

      - name: Verify output files
        run: |
          ls -R ${{ github.workspace }}/output

      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=GrandChessTree-${{ env.version }}" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          files: |
            ${{ github.workspace }}/output/tgct_client_${{ env.formatted_version }}_win-x64.exe
            ${{ github.workspace }}/output/tgct_client_${{ env.formatted_version }}_linux-x64
            ${{ github.workspace }}/output/tgct_client_${{ env.formatted_version }}_linux-arm64
            ${{ github.workspace }}/output/tgct_client_${{ env.formatted_version }}_osx-x64
            ${{ github.workspace }}/output/tgct_client_${{ env.formatted_version }}_osx-arm64
            ${{ github.workspace }}/output/tgct_engine_${{ env.formatted_version }}_win-x64.exe
            ${{ github.workspace }}/output/tgct_engine_${{ env.formatted_version }}_linux-x64
            ${{ github.workspace }}/output/tgct_engine_${{ env.formatted_version }}_linux-arm64
            ${{ github.workspace }}/output/tgct_engine_${{ env.formatted_version }}_osx-x64
            ${{ github.workspace }}/output/tgct_engine_${{ env.formatted_version }}_osx-arm64
          draft: true
